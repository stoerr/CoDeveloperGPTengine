openapi: 3.0.1
info:
  title: Developers Toolbench ChatGPT Plugin
  description: A plugin that allows the user to inspect a directory and read the contents of files using ChatGPT. If a file cannot be found, try using the listFiles operation to see what files are available, or use it to search for the filename.
  version: 1.0.0
servers:
  - url: http://localhost:7364
paths:
  /executeAction:
    post:
      operationId: executeAction
      summary: Execute an action with given content as standard input. Only on explicit user request.
      parameters:
        - name: actionName
          in: query
          description: name of the action to be executed
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Action executed successfully, output returned
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Action not found
        '500':
          description: Action execution failed, output returned
  /grepFiles:
    post:
      operationId: grepAction
      summary: Search for lines in files matching the given regex.
      parameters:
        - name: path
          in: query
          description: relative path to the directory to search in or the file to search. root directory = '.'
          required: true
          schema:
            type: string
        - name: fileRegex
          in: query
          description: optional regex to filter file names
          required: false
          schema:
            type: string
        - name: grepRegex
          in: query
          description: regex to filter lines in the files
          required: true
          schema:
            type: string
        - name: contextLines
          in: query
          description: number of context lines to include with each match (not yet used)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Lines matching the regex
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid parameter
        '500':
          description: Error reading files
  /listFiles:
    get:
      operationId: listFiles
      summary: Recursively lists files in a directory. Optionally filters by filename and content.
      parameters:
        - name: path
          in: query
          description: relative path to directory to list. root directory = '.'
          required: true
          schema:
            type: string
        - name: filenameRegex
          in: query
          description: regex to filter file names
          required: false
          schema:
            type: string
        - name: grepRegex
          in: query
          description: an optional regex that lists only files with matching content
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of relative paths of the files
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Directory not found
  /readFile:
    get:
      operationId: readFile
      summary: Read a files content.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Content of the file
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: File not found
  /replace:
    post:
      operationId: replace
      summary: Replace occurrences of a string in a file.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
        - name: searchString
          in: query
          description: String to be replaced
          required: true
          schema:
            type: string
        - name: replacement
          in: query
          description: Replacement string
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '204':
          description: File updated successfully
        '400':
          description: Invalid parameter
        '500':
          description: Server error
  /writeFile:
    post:
      operationId: writeFile
      summary: Overwrite a file.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
        - name: append
          in: query
          description: If true, append to the file instead of overwriting. If false, you need to give the whole content at once.
          required: false
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '204':
          description: File written
        '400':
          description: Invalid parameter
