openapi: 3.0.1
info:
  title: Developers Toolbench ChatGPT Plugin
  version: 1.0.0
servers:
  - url: http://localhost:7364
paths:
  /executeAction:
    post:
      operationId: executeAction
      summary: Execute an action with given content as standard input. Only on explicit user request.
      parameters:
        - name: actionName
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actionInput:
                  type: string
      responses:
        '200':
          description: Action executed successfully, output returned
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Action not found
        '500':
          description: Action execution failed, output returned
  /grepFiles:
    post:
      operationId: grepAction
      summary: Search for lines in text files matching the given regex.
      parameters:
        - name: path
          in: query
          description: relative path to the directory to search in or the file to search. root directory = '.'
          required: true
          schema:
            type: string
        - name: fileRegex
          in: query
          description: optional regex to filter file names
          required: false
          schema:
            type: string
        - name: grepRegex
          in: query
          description: regex to filter lines in the files
          required: true
          schema:
            type: string
        - name: contextLines
          in: query
          description: number of context lines to include with each match (not yet used)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Lines matching the regex
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid parameter
        '500':
          description: Error reading files
  /listFiles:
    get:
      operationId: listFiles
      summary: Recursively lists files in a directory. Optionally filters by filename and content.
      parameters:
        - name: path
          in: query
          description: relative path to directory to list. root directory = '.'
          required: true
          schema:
            type: string
        - name: filePathRegex
          in: query
          description: regex to filter file paths
          required: false
          schema:
            type: string
        - name: grepRegex
          in: query
          description: an optional regex that lists only files with matching content
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of relative paths of the files
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Directory not found
  /readFile:
    get:
      operationId: readFile
      summary: Read a files content.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Content of the file
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: File not found
  /replaceInFile:
    post:
      operationId: replaceInFile
      summary: Replaces occurrences of a regular expression in a file. You are a Java regular expression expert and can use all advanced regex features - the whole file is matched, not line by line.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                multiple:
                  type: boolean
                  description: If multiple is true, replace all occurrences, otherwise exactly one occurrence - it would be an error if there is no occurrence or several occurrences. Default is false. Use true with care and only if there is a good reason to do so.
                pattern:
                  type: string
                  description: java Pattern to be replaced
                literalReplacement:
                  type: string
                  description: will replace the regex literally, as in java.util.regex.Pattern.compile(pattern).matcher(fileContent).replaceAll(java.util.regex.Matcher.quoteReplacement(literalReplacement)) . Alternative to replacementWithGroupReferences.
                replacementWithGroupReferences:
                  type: string
                  description: will replace the regex as in java.util.regex.Pattern.compile(pattern).matcher(fileContent).replaceAll(replacement) . Caution - you have to observe the escaping rules for replacement by java.util.regex.Matcher for backslashes and dollar signs, so use the alternative literalReplacement if there aren't any group references.
              required:
                - pattern
      responses:
        '200':
          description: File updated successfully
        '400':
          description: Invalid parameter
        '500':
          description: Server error
  /writeFile:
    post:
      operationId: writeFile
      summary: Overwrite a small file with the content given in full.
      parameters:
        - name: path
          in: query
          description: relative path to file
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '204':
          description: File written
        '400':
          description: Invalid parameter
